@using DataModels;
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@model WebApp.LearningSystem.BussinesModels.BusinessViewModel;

@{
    ViewData["Title"] = "Home Page";
    var themes = Model.ContextModel.DataContext.GetEntity<Theme>()
        .Include(nameof(Theme.Commands)).OrderBy(e => e.Name);
    IEnumerable<ExercisesHistory>? history = null;
    if (Model.AuthorizationModel.isAuthorized)
    {
        history = Model.ContextModel.DataContext
            .GetEntity<ExercisesHistory>()
            .Include(nameof(ExercisesHistory.Exercise)).ToList();
    }
}

<div class="cards-container" style="height: 200px; ">
    @foreach (var theme in themes)
    {
        <form method="get" class="card" id="@theme.ThemeId">
            @if (history != null)
            {
                @if (history.FirstOrDefault(e => e.Account == Model.AuthorizationModel.Account
                                                 && e.Exercise.ThemeId == theme.ThemeId) != null)
                {
                    <img class="card-verifier" src="verifyIcon.png" alt="verifyIcon">
                }
            }
            <h2>@theme.Name</h2>
            <a>Количество команд: @theme.Commands.Count</a>
            <p>Изменено: @theme.UpdatedUTC.ToLocalTime().ToString(CultureInfo.GetCultureInfo("ru-RU"))</p>
            <a class="card-hyper-text" asp-route-id="@theme.ThemeId" asp-controller="Theme" asp-action="ReadTheme">Читать</a>
            @* <a class="card-hyper-text" href="Theme/{@theme.ThemeId}">Читать</a> *@
            @* <button type="submit" asp-route-id="@theme.ThemeId" asp-controller="Home" asp-action="ReadTheme"></button> *@
        </form>
    }
</div>