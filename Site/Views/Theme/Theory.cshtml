@using BashDataBaseModels
@model Session<BashDataBaseModels.User>
@{
    var theme = ViewData["Theme"] as Theme;
    ViewData["Title"] = theme.Name;
    ViewData["MarkAsRead"] = "Пометить прочитанным";
    ViewData["MarkAsUnRead"] = "Пометить не прочитанным";
}

@if (theme == null)
{
    <p>Данная тема отсутствует</p>
}
else
{
    @if ((bool)ViewData["isAuthorized"])
    {
        if ((bool)ViewData["isRead"] == false)
        {
            <form class="theme-mark-button-form" method="post">
                <button class="theme-mark-button read" asp-route-id=@theme.ThemeId asp-controller="Theme" asp-action="MarkAsRead">@ViewData["MarkAsRead"]</button>
            </form>
        }
        else
        {
            <form class="theme-mark-button-form" method="post">
                <button class="theme-mark-button unread" asp-route-id=@theme.ThemeId asp-controller="Theme" asp-action="MarkAsUnRead">@ViewData["MarkAsUnRead"]</button>
            </form>
        }
    }

    <div class="content-container">
        <div class="theme-container">
            <h1 class="theory_theme_header">@theme.Name</h1>
            <div class="theory_card">
                @foreach (var command in theme.Commands.OrderBy(command => command.Text))
                {
                    <div class="theory-command-container">
                        <h2 class="theory_command_header">@command.Text</h2>
                        <div class="theory_description_container">
                            <p>@command.Description</p>
                        </div>
                        @if (command.Attributes.Any())
                        {
                            <div class="theory_attributes_container ">
                                <h3 class="theory_attributes_header">Атрибуты</h3>
                                @foreach (var attr in command.Attributes.Where(e => e.IsActual).OrderBy(attr => attr.Text))
                                {
                                    <div class="theory_attribute_container">
                                        <h2 class="theory_attribute_header">@attr.Text</h2>
                                        <div class="theory_description_container">
                                            <p>@attr.Description</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
        <div class="terminal-container">
            @if ((bool)ViewData["isAuthorized"])
            {
                <script src="/js/site.js"></script>
                @* <script src="/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script> *@
                <script src="/lib/jquery/dist/jquery.js"></script>
                <div class="terminal">
                    @{
                        var ExecutorIP = (string)ViewData["BashExecutorIP"];
                    }
                    <textarea class="terminal-textarea" id="terminalConsole"></textarea>
                    <button class="terminal-execute-button"
                            id="terminalButton"
                            onclick="(execute('@ExecutorIP','@Model.Data.UserId'))">
                        Выполнить
                    </button>
                    <p class="terminal-description">Данный терминал имеет ограниченный функционал, некоторые команды могут работать не так как ожидалось, автор не несёт никакой ответственности</p>
                    <script src="/js/exec.js"></script>
                    <script>
                        getConsole().addEventListener("input", function (e) { textEdit(e) })
                    </script>
                </div>
            }
        </div>
    </div>
}